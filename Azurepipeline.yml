# trigger:
# - main  # Change branch if needed

# pool:
#   vmImage: 'windows-latest'

# steps:
# - task: NuGetCommand@2
#   displayName: "Restore NuGet Packages"
#   inputs:
#     command: 'restore'
#     restoreSolution: '**/*.sln'

# - task: VSBuild@1
#   displayName: "Build Solution"
#   inputs:
#     solution: '**/*.sln'
#     platform: 'Any CPU'
#     configuration: 'Release'

# - task: IISWebAppManagementOnMachineGroup@0
#   displayName: "Deploy to IIS (Local)"
#   inputs:
#     ActionIISWebsite: 'CreateOrUpdateWebsite'
#     WebsiteName: 'AspNetSite'
#     WebsitePhysicalPath: '$(Build.ArtifactStagingDirectory)/aspnet-get-started'
#     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
#     Bindings: 'http:*:8080:'

# - task: PowerShell@2
#   displayName: "Fetch and Print Web Page"
#   inputs:
#     targetType: 'inline'
#     script: |
#       Write-Host "Waiting for site to start..."
#       Start-Sleep -Seconds 5
      
#       # Fetch the web page
#       $url = "http://localhost:8080/Home/Index"
#       $outputFile = "$(Build.ArtifactStagingDirectory)/output.html"
      
#       try {
#         Invoke-WebRequest -Uri $url -OutFile $outputFile
#         Write-Host "======= ASP.NET Page Output ======="
#         Get-Content $outputFile
#       } catch {
#         Write-Host "Failed to fetch the page. Error: $_"
#         exit 1
#       }


trigger:
  branches:
    include:
      - main  # Change this to match your default branch

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  outputDirectory: '$(Build.ArtifactStagingDirectory)\drop'

steps:

  
- script: echo Hello from here and there also
  displayName: 'Run a one-line script'

# Step 1: Restore NuGet Packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'

# Step 2: Build the Solution using MSBuild
- task: MSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '$(solution)'
    msbuildArguments: '/p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:PublishDirectory="$(Build.ArtifactStagingDirectory)\drop" /p:Configuration=$(buildConfiguration)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Step 3: Publish Build Artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

# Step 4: Deploy (Optional - Copy Files Over SSH to Windows Server)
# - task: CopyFilesOverSSH@0
#   displayName: 'Deploy to Windows Server'
#   inputs:
#     sshEndpoint: 'MyWindowsServer'  # Define this in Azure DevOps Service Connections
#     sourceFolder: '$(Build.ArtifactStagingDirectory)/drop'
#     targetFolder: 'C:\inetpub\wwwroot\myapp'  # Change this to your IIS site folder
#     cleanTargetFolder: true
#     overwrite: true
 
# trigger:
# - main

# pool:
#   vmImage: 'windows-latest'

# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'

# steps:
# - task: NuGetToolInstaller@1
#   displayName: 'Install NuGet'

# - task: NuGetCommand@2
#   displayName: 'Restore NuGet Packages'
#   inputs:
#     restoreSolution: '$(solution)'
#     command: 'restore'
# - task: PowerShell@2
#   displayName: 'Verify Build Output'
#   inputs:
#     targetType: 'inline'
#     script: 'Get-ChildItem -Recurse $(Build.ArtifactStagingDirectory)'
    
# # - task: VSBuild@1
# #   displayName: 'Build Solution using MSBuild'
# #   inputs:
# #     solution: '$(solution)'
# #     platform: '$(buildPlatform)'
# #     configuration: '$(buildConfiguration)'
# - task: MSBuild@1
#   inputs:
#     solution: '**/*.sln'
#     configuration: '$(buildConfiguration)'
#     # platform: '$(buildPlatform)'
#     clean: true
#     restoreNugetPackages: true
#     msbuildArgs: '/p:OutDir=$(Build.ArtifactStagingDirectory)\bin\'
    

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifacts'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
